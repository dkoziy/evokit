@define-mixin media $selector
    $selector
        @mixin-content

    @media (--EKMediaSmall)
        $(selector)\@small
            @mixin-content

    @media (--EKMediaMedium)
        $(selector)\@medium
            @mixin-content

    @media (--EKMediaLarge)
        $(selector)\@large
            @mixin-content

    @media (--EKMediaXlarge)
        $(selector)\@xlarge
            @mixin-content

    @media (--EKMediaXxlarge)
        $(selector)\@xxlarge
            @mixin-content

    @media (--EKMediaXxxlarge)
        $(selector)\@xxxlarge
            @mixin-content


@define-mixin color $selector
    @each $name in (base, white, black, link, muted, success, info, warning, error, first, second, third, transparent)
        @mixin media $(selector)_$(name)
            @if $name == base
                color: var(--EKColor)
            @else if $name == white
                color: var(--EKColorWhite)
            @else if $name == black
                color: var(--EKColorBlack)
            @else if $name == link
                color: var(--EKColorLink)
            @else if $name == muted
                color: var(--EKColorMuted)
            @else if $name == success
                color: var(--EKColorSuccess)
            @else if $name == info
                color: var(--EKColorInfo)
            @else if $name == warning
                color: var(--EKColorWarning)
            @else if $name == error
                color: var(--EKColorError)
            @else if $name == first
                color: var(--EKColorFirst)
            @else if $name == second
                color: var(--EKColorSecond)
            @else if $name == third
                color: var(--EKColorThird)
            @else if $name == transparent
                color: transparent

@define-mixin font-size $selector
    @each $name in (base, h1, h2, h3, h4, h5, h6, first, second, third)
        @mixin media $(selector)_$(name)
            @if $name == base
                font-size: var(--EKFontSize)
            @else if $name == h1
                font-size: var(--EKFontSizeH1)
            @else if $name == h2
                font-size: var(--EKFontSizeH2)
            @else if $name == h3
                font-size: var(--EKFontSizeH3)
            @else if $name == h4
                font-size: var(--EKFontSizeH4)
            @else if $name == h5
                font-size: var(--EKFontSizeH5)
            @else if $name == h6
                font-size: var(--EKFontSizeH6)
            @else if $name == first
                font-size: var(--EKFontSizeFirst)
            @else if $name == second
                font-size: var(--EKFontSizeSecond)
            @else if $name == third
                font-size: var(--EKFontSizeThird)


@define-mixin font-weight $selector
    @each $name in (base, thin, light, medium, bold, black)
        @mixin media $(selector)_$(name)
            @if $name == base
                font-weight: var(--EKFontWeight)
            @else if $name == thin
                font-weight: 100
            @else if $name == light
                font-weight: 300
            @else if $name == medium
                font-weight: 500
            @else if $name == bold
                font-weight: 700
            @else if $name == black
                font-weight: 900


@define-mixin background-color $selector
    @each $name in (base, white, black, link, muted, success, info, warning, error, first, second, third, transparent)
        @mixin media $(selector)_$(name)
            @if $name == base
                background-color: var(--EKBackgroundColor)
            @else if $name == white
                background-color: var(--EKBackgroundColorWhite)
            @else if $name == black
                background-color: var(--EKBackgroundColorBlack)
            @else if $name == link
                background-color: var(--EKBackgroundColorLink)
            @else if $name == muted
                background-color: var(--EKBackgroundColorMuted)
            @else if $name == success
                background-color: var(--EKBackgroundColorSuccess)
            @else if $name == info
                background-color: var(--EKBackgroundColorInfo)
            @else if $name == warning
                background-color: var(--EKBackgroundColorWarning)
            @else if $name == error
                background-color: var(--EKBackgroundColorError)
            @else if $name == first
                background-color: var(--EKBackgroundColorFirst)
            @else if $name == second
                background-color: var(--EKBackgroundColorSecond)
            @else if $name == third
                background-color: var(--EKBackgroundColorThird)
            @else if $name == transparent
                background-color: transparent

@define-mixin border-color $selector
    @each $name in (base, white, black, link, muted, success, info, warning, error, first, second, third, transparent)
        @mixin media $(selector)_$(name)
            @if $name == base
                border-color: var(--EKBorderColor)
            @else if $name == white
                border-color: var(--EKBorderColorWhite)
            @else if $name == black
                border-color: var(--EKBorderColorBlack)
            @else if $name == link
                border-color: var(--EKBorderColorLink)
            @else if $name == muted
                border-color: var(--EKBorderColorMuted)
            @else if $name == success
                border-color: var(--EKBorderColorSuccess)
            @else if $name == info
                border-color: var(--EKBorderColorInfo)
            @else if $name == warning
                border-color: var(--EKBorderColorWarning)
            @else if $name == error
                border-color: var(--EKBorderColorError)
            @else if $name == first
                border-color: var(--EKBorderColorFirst)
            @else if $name == second
                border-color: var(--EKBorderColorSecond)
            @else if $name == third
                border-color: var(--EKBorderColorThird)
            @else if $name == transparent
                border-color: transparent

@define-mixin grid-divider-item $value
    & + .grid__item
        border-left-width: 0

    @for $index from 1 to $value
        &:nth-child(resolve($value)n-resolve($value - $index))
            @if $index == $value
                border-right-width: 0
            @else
                border-right-width: 1px

            &:nth-last-child(-n+resolve($value - $index + 1))
                border-bottom-width: 0

            &:not(:nth-last-child(-n+resolve($value - $index + 1)))
                border-bottom-width: 1px


@define-mixin width $selector
    @each $to in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
        @each $from in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
            @if $from < $to or ($from == 1 and $to == 1)
                @mixin media $(selector)_$(from)-$(to)
                    width: calc($from / $to * 100%)

@define-mixin helpers-width $selector
    @each $to in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
        @each $from in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
            @if $from < $to or ($from == 1 and $to == 1)
                @mixin media $(selector)-$(from)-$(to)
                    width: calc($from / $to * 100%)
